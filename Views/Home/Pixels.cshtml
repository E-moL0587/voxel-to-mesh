@{ ViewData["Title"] = "Pixels"; }

<section>
  <h3>@ViewData["Title"]</h3>
  <a asp-action="Index">Index</a>

  <input type="file" accept="image/*" id="inputImage" onchange="processImage(event)">
  <canvas id="outputPixel"></canvas>
</section>

<script async src="https://docs.opencv.org/4.x/opencv.js"></script>
<script>
  const imgSize = 20;
  const pixelSize = 10;

  function processImage(event) {
    const file = event.target.files[0];
    if (!file) return;

    const img = new Image();
    img.onload = () => {
      const canvas = document.getElementById('outputPixel');
      const ctx = canvas.getContext('2d');
      canvas.width = imgSize * pixelSize;
      canvas.height = imgSize * pixelSize;

      ctx.drawImage(img, 0, 0, imgSize, imgSize);

      const src = cv.imread(canvas);
      cv.cvtColor(src, src, cv.COLOR_RGBA2GRAY);
      cv.threshold(src, src, 128, 255, cv.THRESH_BINARY);

      ctx.clearRect(0, 0, canvas.width, canvas.height);
      for (let y = 0; y < imgSize; y++) {
        for (let x = 0; x < imgSize; x++) {
          const rect = new cv.Rect(x, y, 1, 1);
          const color = cv.mean(src.roi(rect))[0] > 128 ? 'white' : 'black';
          ctx.fillStyle = color;
          ctx.fillRect(x * pixelSize, y * pixelSize, pixelSize, pixelSize);
        }
      }
      src.delete();
    };
    const reader = new FileReader();
    reader.onload = (e) => img.src = e.target.result;
    reader.readAsDataURL(file);
  }
</script>
