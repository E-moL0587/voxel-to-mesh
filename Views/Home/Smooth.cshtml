<section>
  <canvas id="smoothCanvas"></canvas>
</section>

<script src="https://unpkg.com/three@0.142.0/build/three.min.js"></script>
<script src="https://unpkg.com/three@0.142.0/examples/js/controls/OrbitControls.js"></script>

<script>
  const smoothCanvas = document.querySelector('#smoothCanvas');
  const smoothRenderer = new THREE.WebGLRenderer({ canvas: smoothCanvas });
  const smoothWidth = smoothCanvas.clientWidth;
  const smoothHeight = smoothCanvas.clientHeight;
  smoothRenderer.setSize(smoothWidth, smoothHeight, false);

  const smoothScene = new THREE.Scene();
  const smoothCamera = new THREE.PerspectiveCamera(45, smoothWidth / smoothHeight, 1, 10000);
  smoothCamera.position.set(0, 0, 40);

  const smoothControls = new THREE.OrbitControls(smoothCamera, smoothRenderer.domElement);
  smoothScene.add(new THREE.AmbientLight(0xffffff, 0.5));
  const smoothLight = new THREE.DirectionalLight(0xffffff, 1);
  smoothLight.position.set(5, 10, 7.5).normalize();
  smoothScene.add(smoothLight);

  const smoothData = @Html.Raw(ViewData["SmoothData"]);

  const smoothGeometry = new THREE.BufferGeometry();

  const smoothVertices = [];
  const smoothPoints = [];
  for (let i = 0; i < smoothData.length; i++) {
    smoothPoints.push(new THREE.Vector3(smoothData[i][0], smoothData[i][1], smoothData[i][2]));
  }

  const smoothBoundingBox = new THREE.Box3();
  smoothPoints.forEach(point => {
    smoothBoundingBox.expandByPoint(point);
  });

  const smoothCenter = new THREE.Vector3();
  smoothBoundingBox.getCenter(smoothCenter);

  smoothPoints.forEach(point => {
    smoothVertices.push(-(point.x - smoothCenter.x), -(point.y - smoothCenter.y), -(point.z - smoothCenter.z));
  });

  smoothGeometry.setAttribute('position', new THREE.Float32BufferAttribute(smoothVertices, 3));
  smoothGeometry.computeVertexNormals();

  const smoothMaterial = new THREE.MeshPhongMaterial({ color: 0xff00ff, side: THREE.DoubleSide });
  const smoothMesh = new THREE.Mesh(smoothGeometry, smoothMaterial);
  smoothScene.add(smoothMesh);

  function animateSmooth() {
    requestAnimationFrame(animateSmooth);
    smoothControls.update();
    smoothRenderer.render(smoothScene, smoothCamera);
  }

  animateSmooth();
</script>
